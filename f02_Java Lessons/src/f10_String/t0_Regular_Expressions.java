package f10_String;

import java.util.Arrays;

public class t0_Regular_Expressions {
	public static void main(String[] args) {
		
	/*	    \\s Any white-space character
		 	\\s+ One or more occurrences of any white-space character   */
	String a = "ab cd   ef \t  gh  \n  ij";
	String[] arStr = a.split("\\s");
	String[] arStr1 = a.split("\\s+");
	System.out.println(Arrays.toString(arStr));
	System.out.println(Arrays.toString(arStr1));
	
	
	
	
	

		/* split() Регулярное выражение "\\s*(\\s|,|!|\\.)\\s*"
Подвыражние "\\s" по сути представляет пробел. Звездочка указывает, что символ может присутствовать от 0 до бесконечного
количества раз. То есть добавляем звездочку и мы получаем неопределенное количество идущих подряд пробелов - "\\s*" (то есть 
неважно, сколько пробелов между словами). Причем пробелы может вообще не быть. В скобках указывает группа выражений, которая
может идти после неопределенного количества пробелов. Группа позволяет нам определить набо значений через вертикальную черту,
и подстрока должна соответствовать одному из этих значений. То есть в группе "\\s|,|!|\\." подстрока может соответствовать 
пробелу, запятой, восклицательному знаку или точке. Причем поскольку точка представляет специальную последовательность, то, 
чтобы указать, что мы имеем в виду имеено знак точки, а не специальную последовательность, перед точкой ставим слеши. */
	System.out.println("\t  split() Регулярное выражение для разделения через пробелы");
String s28 = "FIFA will never regret it";
String Array4[] = s28.split("\\s*(\\s|,|!|\\.)\\s*"); //  "\\s" - пробел
for(String each : Array4) System.out.println(each + "  "); System.out.println();
		
		
		/* matches() принимает регулярное выражение и возвращает true, если строка соответствует этому выражению.
В данном случае в регулярном выражение сначала определяется группа "(\\+*)". То есть вначале может идти знак плюса, но 
также он может отсутствовать. Далее смотрим, соответствуют ли последующие 11 символов цифрам. Выражение "\\d" представляет
цифровой символ, а число в фигурных скобках - {11} - сколько раз данный тип символов должен повторяться. То есть мы ищем строку,
где вначале может идти знак плюс (или он может отсутствовать), а потом идет 11 цифровых символов.  	 */
	System.out.println("\t matches()");
String input= "+79201056041";
boolean res = input.matches("(\\+*)\\d{11}");
if (res) System.out.println("Это номер телефона");
else System.out.println("Это не номер телефона");	System.out.println();


	}

}
