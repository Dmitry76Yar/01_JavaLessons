package f13_Methods;
/* Методы, способные принимать переменное число аргументов. 
Например, методу, устанавливающему соединение с интернетом, могут понадобиться имя и пароль пользователя, имя файла и другие параметры.
Если при вызове метода некоторые из этих данных опущены, то должны использоваться значения по умолчанию. 
В подобных ситуациях требуется метод, который мог бы принимать аргументы, количество которых заранее не известно. */

/* Списки аргументов переменной длины обозначаются символом многоточия ( ... ).
Ниже приведен пример метода vaTest () , принимающего переменное число аргументов (в том числе и нулевое). 
Обращение к параметру v в методе vaTest () осуществляется как к массиву. 
Помимо списка параметров переменной длины, в объявлении метода могут указываться и обычные параметры, но при одном условии: 
массив параметров переменной длины должен быть указан последним. */

/* Существует еще одно ограничение, которое следует соблюдать: список параметров переменной длины можно указать в методе
 только один раз. Например, приведенное ниже объявление метода недопустимо.
int doIt(int а, int Ь, double с, int ... vals, double ... morevals) { // Ошибка! 
Ошибкой в данном случае является попытка указать два разных списка параметров переменной длины. */    

class t7_Method_with_variable_length_arguments {
    
     static void vaTest (String msg, double a, char b, int ... v) {    // Метод со списком аргументов переменной длины
        System.out.println("Чиcлo аргументов массива переменной длины v: " + v.length);
        System.out.print("Coдepжимoe: " + msg + ", " + a + ", " + b + ", ");
            for(int i = 0; i < v.length; i++)
                System.out.print(" arg " + i + "·= " + v[i] + ", \t");
                System.out.println("\n");
                }
        
   public static void main(String[] args) {
    vaTest("Dima", 3.0, 'Y', 10); 
    vaTest("Dima", 3.0, 'Y', 1,5,3);
    vaTest("Dima", 3.0, 'Y');
   }
}
   