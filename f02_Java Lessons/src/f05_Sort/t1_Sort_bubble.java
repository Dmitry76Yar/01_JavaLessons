package f05_Sort;
// Суть метода - в смещении минимального числа на 1-ое место при выполнении 1-го внешнего цикла
// и затем смещение 2-го минимального числа на 2-ое место при выполнении 2-го внешнего цикла и т.п.

class t1_Sort_bubble {
    public static void main(String args[]) {
    int nums[] = {99, -10, 100123, 18, -978, 5623, 463, -9, 287, 49 } ;
    int a, b, t;
    int size = nums.length; // количество сортируемых элементов  
  
System.out.print("иcxoдный массив: \t"); // Отобразить исходный массив
for(int i=0; i < size; i++)
    System.out.print(" " + nums[i]);
    System.out.println();
    
// Реализовать алгоритм пузырьковой сортировки
// Во внутреннем цикле сравниваются соседние элементы массива и выявляются элементы, находящиеся не на своих местах.
// При обнаружении элемента, нарушающего требуемый порядок, два соседних элемента меняются местами. 
// На каждом проходе наименьший элемент перемещается на одну позицию в нужное положение.

// Внешний цикл обеспечивает повторение описанного процесса до завершения всего процесса сортировки.

for(a=1; a<size; a++) 
    for (b = size-1; b>=a; b--) {
        System.out.print("   a =  " + a); System.out.print("   b =  " + b + "\t  ");
        if(nums[b-1] > nums[b]) { // если требуемый порядок следования не соблюдается,поменять элементы местами
            t = nums[b-1];
            nums[b-1] = nums[b];
            nums[b] = t;}
    for(int i=0; i < size; i++)
    System.out.print(" " + nums[i] + "  "); 
    System.out.println();
        
    }
// Отобразить отсортированный массив
System.out.print("Oтcopтиpoвaнный массив:");
for(int i=0; i < size; i++)
    System.out.print(" " + nums[i]);
    System.out.println();
}
}
 